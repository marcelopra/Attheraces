/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attheraces;

import java.awt.Component;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author marce
 */
public class PainelWhere extends javax.swing.JPanel {

    /**
     * Creates new form PainelWherer
     */
    public PainelWhere() {
        initComponents();
        
        tablePadrao1.getColumnModel().getColumn(1).setCellEditor(new MyComboBoxEditor(SQLColuna.getArray()));
        tablePadrao1.getColumnModel().getColumn(2).setCellEditor(new MyComboBoxEditor(SQLOperador.getArray()));
        tablePadrao1.getColumnModel().getColumn(4).setCellEditor(new MyComboBoxEditor(SQLCondicao.getArray()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePadrao1 = new gui.TablePadrao();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        rbMeidas = new javax.swing.JRadioButton();
        rbLongas = new javax.swing.JRadioButton();
        rbCurtas = new javax.swing.JRadioButton();
        rbTodas = new javax.swing.JRadioButton();

        tablePadrao1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Campo", "Operador", "Valor", "Condição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePadrao1);
        if (tablePadrao1.getColumnModel().getColumnCount() > 0) {
            tablePadrao1.getColumnModel().getColumn(0).setPreferredWidth(20);
            tablePadrao1.getColumnModel().getColumn(1).setPreferredWidth(200);
            tablePadrao1.getColumnModel().getColumn(2).setPreferredWidth(75);
            tablePadrao1.getColumnModel().getColumn(3).setPreferredWidth(200);
            tablePadrao1.getColumnModel().getColumn(4).setPreferredWidth(75);
        }

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        buttonGroup1.add(rbMeidas);
        rbMeidas.setText("Médias");

        buttonGroup1.add(rbLongas);
        rbLongas.setText("Longas");

        buttonGroup1.add(rbCurtas);
        rbCurtas.setText("Curtas");

        buttonGroup1.add(rbTodas);
        rbTodas.setSelected(true);
        rbTodas.setText("Todas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rbTodas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbCurtas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbMeidas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbLongas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbMeidas)
                            .addComponent(rbLongas)
                            .addComponent(rbCurtas)
                            .addComponent(rbTodas))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tablePadrao1.adicionarLinha(new Object[] {tablePadrao1.getRowCount() + 1, null, null, null, null});
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        tablePadrao1.excluirLinhasSelecionadas();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    public String getWhere() throws SQLWhreException {
        String where = "";
        
        String whereDist = "";
        if(rbCurtas.isSelected()) {
            whereDist += " AND (DIST < 1609) ";
        }
        
        if(rbMeidas.isSelected()) {
            whereDist += " AND (DIST >= 1609 AND DIST <=3218) " ;
        }
        if(rbLongas.isSelected()) {
            whereDist += " AND (DIST > 3218) " ;
        }
        
        where += whereDist;
        int totalLinhas = tablePadrao1.getRowCount();
        if(totalLinhas > 0) {
            where += " AND (";
            for(int i=0; i < totalLinhas; i++) {
                
                if(((SQLColuna)tablePadrao1.getValueAt(i, 1)) != null) {
                    if(((SQLOperador)tablePadrao1.getValueAt(i, 2)) != null) {
                        where += " ( " + ((SQLColuna)tablePadrao1.getValueAt(i, 1)).getNomeColuna() + " " + 
                                ((SQLOperador)tablePadrao1.getValueAt(i, 2)).getOperador() + " " +
                                tablePadrao1.getValueAt(i, 3).toString() + ") ";

                        if(i < totalLinhas-1 && tablePadrao1.getValueAt(i, 4) != null) {
                            where += ((SQLCondicao)tablePadrao1.getValueAt(i, 4)).getCondicao();
                        }
                    } else {
                        throw new SQLWhreException("Erro na linha '" + i + "'. Você deve selecionar o operador.");
                    }
                } else {
                    throw new SQLWhreException("Erro na linha '" + i + "'. Você deve selecionar o campo.");
                }
            }
            where += ")";
        }
        
        System.out.println(where);
        return where;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCurtas;
    private javax.swing.JRadioButton rbLongas;
    private javax.swing.JRadioButton rbMeidas;
    private javax.swing.JRadioButton rbTodas;
    private gui.TablePadrao tablePadrao1;
    // End of variables declaration//GEN-END:variables

    class MyComboBoxRenderer extends JComboBox implements TableCellRenderer {

        public MyComboBoxRenderer(SQLOperador[] items) {
            super(items);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                boolean hasFocus, int row, int column) {
            if (isSelected) {
                setForeground(table.getSelectionForeground());
                super.setBackground(table.getSelectionBackground());
            } else {
                setForeground(table.getForeground());
                setBackground(table.getBackground());
            }
            setSelectedItem(value);
            return this;
        }
    }

    class MyComboBoxEditor extends DefaultCellEditor {

        public MyComboBoxEditor(Object[] items) {
            super(new JComboBox(items));
        }
    }
}
